name: QuickJS MinGW DLL build

on: 
  push:
    paths:
      - 'quickjs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cflags: [ "-flto -O2", "-flto -Os", "-flto -O3" ]

    steps:
    - uses: actions/checkout@v2
    - name: install mingw
      run: sudo apt-get update ; sudo apt-get install -y mingw-w64
    - name: build dlls
      run: |
        mkdir -p bin
        # generate def file
        gcc -shared  quickjs/*.c -DCONFIG_VERSION=\"$(cat quickjs/VERSION)\" -DCONFIG_BIGNUM -D_GNU_SOURCE=1 -fPIC -o libquickjs.so
        # export only symbols with "js" in them
        echo 'EXPORTS' > bin/libquickjs.def
        nm  -D --defined-only -f posix libquickjs.so | grep -i js | awk '{print $1}' >> bin/libquickjs.def
        i686-w64-mingw32-gcc -shared -static quickjs/*.c bin/libquickjs.def -DCONFIG_VERSION=\"$(cat quickjs/VERSION)\" -DCONFIG_BIGNUM -o bin/libquickjs32.dll  -Wl,--out-implib,bin/libquickjs32.a -pthread -s ${{ matrix.cflags }}
        x86_64-w64-mingw32-gcc -shared -static quickjs/*.c bin/libquickjs.def -DCONFIG_VERSION=\"$(cat quickjs/VERSION)\" -DCONFIG_BIGNUM -o bin/libquickjs64.dll  -Wl,--out-implib,bin/libquickjs64.a -pthread -s ${{ matrix.cflags }}
      shell: bash
    - uses: actions/upload-artifact@v1
      with:
        name: dlls ${{matrix.cflags}}
        path: bin